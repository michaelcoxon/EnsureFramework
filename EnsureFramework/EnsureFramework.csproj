<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.0;netcoreapp1.1;net46;net47;netstandard2.0;netstandard1.6</TargetFrameworks>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Authors>Michael Coxon</Authors>
    <Description>EnsureFramework is designed to take the pain out of null checking and making sure (ensuring) your methods are being used the way they were intended and throwing exceptions when unsupported values are passed to them.

You can make sure values are in a specific range or simply make sure that an argument is not null.

It was designed to be readable and fluent based, meaning you can chain ensurables together and the first one that fails will result in the exception.</Description>
    <Copyright>Copyright 2018</Copyright>
    <PackageLicenseUrl>https://github.com/michaelcoxon/EnsureFramework/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/michaelcoxon/EnsureFramework</PackageProjectUrl>
    <RepositoryUrl>https://github.com/michaelcoxon/EnsureFramework</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>runtime-contracts,ensure,contracts</PackageTags>
    <NeutralLanguage>en</NeutralLanguage>
    <Version>1.3.0</Version>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <Compile Update="Resources\Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources\Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
